-------JOINS--------


1. What is a join?

A join is a SQ clause used to combine and retrieve records from two or multiple tables. SQL tables can be joined based on the relationship between the columns of those tables. Check out our SQL joins tutorial to know all the details about them.

2. What are the main types of joins?

There are six main types of joins:

INNER JOIN
LEFT JOIN
RIGHT JOIN
FULL JOIN
SELF JOIN
CROSS JOIN

3. What is the difference between a LEFT JOIN and a RIGHT JOIN?


The LEFT JOIN includes all records from the left side and matched rows from the right table, whereas the RIGHT JOIN returns all rows from the right side and unmatched rows from the left table. Essentially, both joins will throw the same result if we exchange the table order, provided that there are only two tables involved.

4. Why are joins important in SQL management?

SQL joins are crucial in SQL management for multiple reasons, including:

SQL JOINS are key methods to integrate multiple tables so they are easy to read and
They provide an efficient and accessible way to access and combine information in your database.
Using JOINS can reduce data usage and storage on the database.
5. What is an OUTER JOIN?
Outer joins are joins that return matched values and unmatched values from either or both tables. LEFT JOIN, RIGHT JOIN, AND FULL JOIN are considered outer joins.

6. What is an INNER JOIN?

An INNER JOIN returns only those records that satisfy a defined join condition in both (or all) tables. It's a default SQL join.

7. What is a CROSS JOIN?

A CROSS JOIN returns a paired combination of each row of the first table with each row of the second table. This join type is also known as cartesian join.

8. Is it possible to join a SQL table to itself?

Yes, this is normally done through a so-called self-join. A self-join is a type of JOIN used to compare rows within the same table. Unlike other SQL JOIN queries that join two or more tables, a self-join joins a table to itself.

9. What is the difference between FULL JOIN and CROSS JOIN?

A FULL JOIN returns all records from both tables. When the ON condition is not satisfied, it returns a NULL value. By contrast, a CROSS JOIN returns all possible combinations of all rows of both tables, resulting in a cartesian product between the two tables. This results in a larger table than the result of a FULL JOIN.

10. What is the purpose of using aliases in SQL JOINS?

As queries get more complex, names can get long and unwieldy. To help make things clearer, we can use aliases to assign new names to items in the query, including columns and tables. To give an alias to an object, we can use the AS clause.


------Aggregators-------


1.What are aggregate functions in SQL?

2.Can you explain how the COUNT function works

3.SUM () WORKING

4.AVG() WORKING

5.MIN() WORKING

6.MAX() WORKING

7.What is the difference between COUNT(column_name) and COUNT(*)?

8.What is the difference between HAVING and WHERE clauses?

9.Can you perform calculations using multiple aggregate functions in a single query?

10.Explain the use of DISTINCT with aggregate functions.

11.NORMAL FUNCTIONS AND AGGREGATE FUNCTIONS

12.How would you find the second highest salary from a table?

SELECT DISTINCT Salary
FROM Employees
ORDER BY Salary DESC
LIMIT 1 OFFSET 1;

The LIMIT clause is used to specify the maximum number of rows that should be returned by the query.

The OFFSET clause is used to skip a specified number of rows before beginning to return rows from the query result.

13.will group by work without aggregators
